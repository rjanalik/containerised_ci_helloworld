build_job_helper_image-{{os}}{{osver}}-{{archstr[arch]}}:
  stage: build_base_image
  extends:
    - {{container_builder[arch]}}
  variables:
    DOCKERFILE: "{{helperdockerfile}}"
    PERSIST_IMAGE_NAME: "{{registry_helper_image_name_tag}}"
    DOCKER_BUILD_ARGS: '{{docker_build_args_helper[arch]}}'

test_job_helper_image-{{os}}{{osver}}-{{archstr[arch]}}:
  stage: test_base_image
  extends:
    - {{container_runner[arch]}}
  image: "{{registry_helper_image_name_tag}}"
  script:
    - '[[ $(source /etc/os-release && echo $ID) == "{{os}}" ]]'
    - '[[ $(source /etc/os-release && echo $VERSION_ID) == "{{osver}}" ]]'
    {% if arch == "cuda" -%}
    - 'apt-cache show cuda-libraries-* | grep "Version: {{cudaver}}"'
    {%- endif %}
    {% if arch == "rocm" -%}
    - 'apt-cache show rocm-core | grep "Version: {{rocmver}}."'
    {%- endif %}

deploy_job_helper_image-{{os}}{{osver}}-{{archstr[arch]}}:
  stage: deploy_base_image
  extends:
    - {{container_deploy}}
  image: {{deploy_runner_image}}
  rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: manual
      allow_failure: true
  variables:
    SRC: "{{registry_helper_image_name_tag}}"
    DST: "{{deploy_helper_image_name_tag}}"
  script:
    - echo ${JFROG_ACCESS_TOKEN} | skopeo login --username rjanalik --password-stdin jfrog.svc.cscs.ch
    - skopeo copy "docker://${SRC}" "docker://${DST}"
